# Generated by Django 4.2.13 on 2024-10-16 18:17

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, null=True)),
                ('name', models.CharField(blank=True, max_length=120, verbose_name='Full Name')),
                ('home_plant', models.CharField(max_length=6)),
                ('preferences', models.JSONField(null=True)),
                ('is_supervisor', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='%(class)s_set', related_query_name='user', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='%(class)s_set', related_query_name='user', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Corrugator',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=20)),
                ('desc', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=20)),
                ('desc', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Flute',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=20)),
                ('desc', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=20)),
                ('desc', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PaperType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=20)),
                ('desc', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Plant',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=6)),
                ('desc', models.CharField(max_length=25)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=20)),
                ('desc', models.CharField(blank=True, max_length=100)),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.plant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SpecialInstructionCode',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=20)),
                ('desc', models.CharField(blank=True, max_length=100)),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.plant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Roll',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('roll_no', models.CharField(max_length=20, unique=True)),
                ('vroll_no', models.CharField(max_length=20, unique=True)),
                ('width', models.DecimalField(decimal_places=2, max_digits=10)),
                ('received_date', models.DateField()),
                ('weight', models.IntegerField()),
                ('linear_foot', models.IntegerField()),
                ('msf', models.DecimalField(decimal_places=2, max_digits=11)),
                ('cost_by_ton', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cost_by_msf', models.DecimalField(decimal_places=2, max_digits=10)),
                ('mill', models.CharField(max_length=20)),
                ('moisture', models.DecimalField(decimal_places=2, max_digits=10)),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.grade')),
                ('paper_type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.papertype')),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.plant')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.vendor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='papertype',
            name='plant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.plant'),
        ),
        migrations.CreateModel(
            name='PaperTestType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=20)),
                ('desc', models.CharField(blank=True, max_length=100)),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.plant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PaperTestReason',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=20)),
                ('desc', models.CharField(blank=True, max_length=100)),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.plant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PaperTestPosition',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=20)),
                ('desc', models.CharField(blank=True, max_length=100)),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.plant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PaperTest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('test_value', models.FloatField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.account')),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.plant')),
                ('roll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.roll')),
                ('test_position', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.papertestposition')),
                ('test_reason', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.papertestreason')),
                ('test_type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.papertesttype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderTestCode',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=20)),
                ('desc', models.CharField(blank=True, max_length=100)),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.plant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('order_no', models.CharField(max_length=20)),
                ('order_date', models.DateField()),
                ('cust_po', models.CharField(max_length=20)),
                ('ship_no', models.CharField(max_length=20)),
                ('ship_date', models.DateField()),
                ('width', models.DecimalField(decimal_places=4, max_digits=7)),
                ('length', models.DecimalField(decimal_places=4, max_digits=7)),
                ('walls', models.PositiveSmallIntegerField()),
                ('corrugator', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.corrugator')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.customer')),
                ('flute', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.flute')),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.plant')),
                ('spec_code', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.specialinstructioncode')),
                ('test_code', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.ordertestcode')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Litho',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=20)),
                ('desc', models.CharField(blank=True, max_length=100)),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.plant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='grade',
            name='plant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.plant'),
        ),
        migrations.AddField(
            model_name='flute',
            name='plant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.plant'),
        ),
        migrations.AddField(
            model_name='customer',
            name='plant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.plant'),
        ),
        migrations.AddField(
            model_name='corrugator',
            name='plant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.plant'),
        ),
        migrations.CreateModel(
            name='CombinedBoardTestType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=20)),
                ('desc', models.CharField(blank=True, max_length=100)),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.plant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CombinedBoardTestReason',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=20)),
                ('desc', models.CharField(blank=True, max_length=100)),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.plant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CombinedBoardTestLayer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=20)),
                ('desc', models.CharField(blank=True, max_length=100)),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.plant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CombinedBoardTest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('test_value', models.FloatField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.account')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.order')),
                ('plant', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.plant')),
                ('test_layer_1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='layer_1', to='api.combinedboardtestlayer')),
                ('test_layer_2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='layer_2', to='api.combinedboardtestlayer')),
                ('test_layer_3', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='layer_3', to='api.combinedboardtestlayer')),
                ('test_layer_4', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='layer_4', to='api.combinedboardtestlayer')),
                ('test_layer_5', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='layer_5', to='api.combinedboardtestlayer')),
                ('test_layer_6', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='layer_6', to='api.combinedboardtestlayer')),
                ('test_layer_7', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='layer_7', to='api.combinedboardtestlayer')),
                ('test_litho_1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='litho_point', to='api.litho')),
                ('test_reason', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.combinedboardtestreason')),
                ('test_roll_1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='roll_1', to='api.roll')),
                ('test_roll_2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='roll_2', to='api.roll')),
                ('test_roll_3', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='roll_3', to='api.roll')),
                ('test_roll_4', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='roll_4', to='api.roll')),
                ('test_roll_5', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='roll_5', to='api.roll')),
                ('test_roll_6', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='roll_6', to='api.roll')),
                ('test_roll_7', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='roll_7', to='api.roll')),
                ('test_type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.combinedboardtesttype')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
