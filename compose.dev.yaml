services:
  frontend:
    build: NiceGuiFrontEnd
    env_file:
      - development.env
    restart: always
    container_name: nicegui_container
    deploy:
      resources:
        limits:
          memory: 200M
        reservations:
          memory: 50M
    volumes:
      - ./NiceGuiFrontEnd:/app
      - ./NiceGuiFrontEnd/logging:/var/log
      - ./local:/app/local
    ports:
      - "80:8080"
    networks:
      - quality_dashboard_network
    depends_on:
      - backend

  backend:
    build: CorrchoiceQualityBackend
    env_file:
      - development.env
    restart: always
    container_name: django_container
    deploy:
      resources:
        limits:
          memory: 100M
        reservations:
          memory: 50M
    volumes:
      - ./CorrchoiceQualityBackend:/app
      - ./CorrchoiceQualityBackend/logging:/var/log
      - ./local:/app/local
    depends_on:
      database:
        condition: service_healthy
    networks:
      - quality_dashboard_network

  database:
    build: MariaDatabase
    env_file:
      - development.env
    restart: always
    container_name: mariadb_container
    deploy:
      resources:
        limits:
          memory: 100M
        reservations:
          memory: 50M
    healthcheck:
      test: ["CMD", "pgrep", "mariadb"]
      interval: 15s
      retries: 5
      start_period: 15s
    volumes:
      - ./MariaDatabase:/app
      - ./backups:/app/backups
    networks:
      - quality_dashboard_network

  script_runner:
    build: ScriptRunner
    env_file:
      - development.env
    restart: always
    container_name: script_container
    deploy:
      resources:
        limits:
          memory: 50M
        reservations:
          memory: 25M
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./backups:/scripts/backups
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
        - quality_dashboard_network

networks:
  quality_dashboard_network:
    name: quality_net
    driver: bridge
